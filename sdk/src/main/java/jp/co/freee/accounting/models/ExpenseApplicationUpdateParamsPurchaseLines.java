/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import jp.co.freee.accounting.models.ExpenseApplicationUpdateParamsExpenseApplicationLines1;

/**
 * ExpenseApplicationUpdateParamsPurchaseLines
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExpenseApplicationUpdateParamsPurchaseLines {
  public static final String SERIALIZED_NAME_EXPENSE_APPLICATION_LINES = "expense_application_lines";
  @SerializedName(SERIALIZED_NAME_EXPENSE_APPLICATION_LINES)
  private List<ExpenseApplicationUpdateParamsExpenseApplicationLines1> expenseApplicationLines = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_RECEIPT_ID = "receipt_id";
  @SerializedName(SERIALIZED_NAME_RECEIPT_ID)
  private Integer receiptId;

  public static final String SERIALIZED_NAME_TRANSACTION_DATE = "transaction_date";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_DATE)
  private String transactionDate;

  public ExpenseApplicationUpdateParamsPurchaseLines() { 
  }

  public ExpenseApplicationUpdateParamsPurchaseLines expenseApplicationLines(List<ExpenseApplicationUpdateParamsExpenseApplicationLines1> expenseApplicationLines) {
    
    this.expenseApplicationLines = expenseApplicationLines;
    return this;
  }

  public ExpenseApplicationUpdateParamsPurchaseLines addExpenseApplicationLinesItem(ExpenseApplicationUpdateParamsExpenseApplicationLines1 expenseApplicationLinesItem) {
    if (this.expenseApplicationLines == null) {
      this.expenseApplicationLines = new ArrayList<>();
    }
    this.expenseApplicationLines.add(expenseApplicationLinesItem);
    return this;
  }

   /**
   * 明細行一覧（配列）
   * @return expenseApplicationLines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "明細行一覧（配列）")

  public List<ExpenseApplicationUpdateParamsExpenseApplicationLines1> getExpenseApplicationLines() {
    return expenseApplicationLines;
  }


  public void setExpenseApplicationLines(List<ExpenseApplicationUpdateParamsExpenseApplicationLines1> expenseApplicationLines) {
    this.expenseApplicationLines = expenseApplicationLines;
  }


  public ExpenseApplicationUpdateParamsPurchaseLines id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * 経費申請の申請行ID: 既存申請行を更新する場合に指定します。IDを指定しない申請行は、新規行として扱われ追加されます。また、purchase_linesに含まれない既存の申請行は削除されます。更新後も残したい行は、必ず経費申請の申請行IDを指定してpurchase_linesに含めてください。
   * minimum: 1
   * maximum: 9223372036854775807
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "経費申請の申請行ID: 既存申請行を更新する場合に指定します。IDを指定しない申請行は、新規行として扱われ追加されます。また、purchase_linesに含まれない既存の申請行は削除されます。更新後も残したい行は、必ず経費申請の申請行IDを指定してpurchase_linesに含めてください。")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ExpenseApplicationUpdateParamsPurchaseLines receiptId(Integer receiptId) {
    
    this.receiptId = receiptId;
    return this;
  }

   /**
   * ファイルボックス（証憑ファイル）ID
   * minimum: 1
   * maximum: 2147483647
   * @return receiptId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "606", value = "ファイルボックス（証憑ファイル）ID")

  public Integer getReceiptId() {
    return receiptId;
  }


  public void setReceiptId(Integer receiptId) {
    this.receiptId = receiptId;
  }


  public ExpenseApplicationUpdateParamsPurchaseLines transactionDate(String transactionDate) {
    
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * 日付 (yyyy-mm-dd)
   * @return transactionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-12-17", value = "日付 (yyyy-mm-dd)")

  public String getTransactionDate() {
    return transactionDate;
  }


  public void setTransactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseApplicationUpdateParamsPurchaseLines expenseApplicationUpdateParamsPurchaseLines = (ExpenseApplicationUpdateParamsPurchaseLines) o;
    return Objects.equals(this.expenseApplicationLines, expenseApplicationUpdateParamsPurchaseLines.expenseApplicationLines) &&
        Objects.equals(this.id, expenseApplicationUpdateParamsPurchaseLines.id) &&
        Objects.equals(this.receiptId, expenseApplicationUpdateParamsPurchaseLines.receiptId) &&
        Objects.equals(this.transactionDate, expenseApplicationUpdateParamsPurchaseLines.transactionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expenseApplicationLines, id, receiptId, transactionDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseApplicationUpdateParamsPurchaseLines {\n");
    sb.append("    expenseApplicationLines: ").append(toIndentedString(expenseApplicationLines)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    receiptId: ").append(toIndentedString(receiptId)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

