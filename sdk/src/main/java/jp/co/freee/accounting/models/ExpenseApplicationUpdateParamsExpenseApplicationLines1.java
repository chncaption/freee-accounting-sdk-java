/*
 * freee API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package jp.co.freee.accounting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ExpenseApplicationUpdateParamsExpenseApplicationLines1
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExpenseApplicationUpdateParamsExpenseApplicationLines1 {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXPENSE_APPLICATION_LINE_TEMPLATE_ID = "expense_application_line_template_id";
  @SerializedName(SERIALIZED_NAME_EXPENSE_APPLICATION_LINE_TEMPLATE_ID)
  private Integer expenseApplicationLineTemplateId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public ExpenseApplicationUpdateParamsExpenseApplicationLines1() { 
  }

  public ExpenseApplicationUpdateParamsExpenseApplicationLines1 amount(Integer amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * 金額
   * minimum: 0
   * maximum: 2147483647
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30000", value = "金額")

  public Integer getAmount() {
    return amount;
  }


  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public ExpenseApplicationUpdateParamsExpenseApplicationLines1 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * 内容 (250文字以内)
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "交通費：新幹線往復（東京〜大阪）", value = "内容 (250文字以内)")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ExpenseApplicationUpdateParamsExpenseApplicationLines1 expenseApplicationLineTemplateId(Integer expenseApplicationLineTemplateId) {
    
    this.expenseApplicationLineTemplateId = expenseApplicationLineTemplateId;
    return this;
  }

   /**
   * 経費科目ID
   * minimum: 1
   * maximum: 2147483647
   * @return expenseApplicationLineTemplateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "505", value = "経費科目ID")

  public Integer getExpenseApplicationLineTemplateId() {
    return expenseApplicationLineTemplateId;
  }


  public void setExpenseApplicationLineTemplateId(Integer expenseApplicationLineTemplateId) {
    this.expenseApplicationLineTemplateId = expenseApplicationLineTemplateId;
  }


  public ExpenseApplicationUpdateParamsExpenseApplicationLines1 id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * 経費申請の明細行ID: 既存明細行を更新する場合に指定します。IDを指定しない明細行は、新規行として扱われ追加されます。また、expense_application_linesに含まれない既存の明細行は削除されます。更新後も残したい行は、必ず経費申請の明細行IDを指定してexpense_application_linesに含めてください。
   * minimum: 1
   * maximum: 9223372036854775807
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "経費申請の明細行ID: 既存明細行を更新する場合に指定します。IDを指定しない明細行は、新規行として扱われ追加されます。また、expense_application_linesに含まれない既存の明細行は削除されます。更新後も残したい行は、必ず経費申請の明細行IDを指定してexpense_application_linesに含めてください。")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpenseApplicationUpdateParamsExpenseApplicationLines1 expenseApplicationUpdateParamsExpenseApplicationLines1 = (ExpenseApplicationUpdateParamsExpenseApplicationLines1) o;
    return Objects.equals(this.amount, expenseApplicationUpdateParamsExpenseApplicationLines1.amount) &&
        Objects.equals(this.description, expenseApplicationUpdateParamsExpenseApplicationLines1.description) &&
        Objects.equals(this.expenseApplicationLineTemplateId, expenseApplicationUpdateParamsExpenseApplicationLines1.expenseApplicationLineTemplateId) &&
        Objects.equals(this.id, expenseApplicationUpdateParamsExpenseApplicationLines1.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, description, expenseApplicationLineTemplateId, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpenseApplicationUpdateParamsExpenseApplicationLines1 {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expenseApplicationLineTemplateId: ").append(toIndentedString(expenseApplicationLineTemplateId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

